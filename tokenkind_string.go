// Code generated by "stringer -type TokenKind"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[T_LEFT_PAREN-0]
	_ = x[T_RIGHT_PAREN-1]
	_ = x[T_LEFT_BRACE-2]
	_ = x[T_RIGHT_BRACE-3]
	_ = x[T_COMMA-4]
	_ = x[T_DOT-5]
	_ = x[T_MINUS-6]
	_ = x[T_PLUS-7]
	_ = x[T_SEMICOLON-8]
	_ = x[T_SLASH-9]
	_ = x[T_STAR-10]
	_ = x[T_BANG-11]
	_ = x[T_BANG_EQUAL-12]
	_ = x[T_EQUAL-13]
	_ = x[T_EQUAL_EQUAL-14]
	_ = x[T_GREATER-15]
	_ = x[T_GREATER_EQUAL-16]
	_ = x[T_LESS-17]
	_ = x[T_LESS_EQUAL-18]
	_ = x[T_IDENTIFIER-19]
	_ = x[T_STRING-20]
	_ = x[T_NUMBER-21]
	_ = x[T_AND-22]
	_ = x[T_CLASS-23]
	_ = x[T_ELSE-24]
	_ = x[T_FALSE-25]
	_ = x[T_FOR-26]
	_ = x[T_FUN-27]
	_ = x[T_IF-28]
	_ = x[T_NIL-29]
	_ = x[T_OR-30]
	_ = x[T_PRINT-31]
	_ = x[T_RETURN-32]
	_ = x[T_SUPER-33]
	_ = x[T_THIS-34]
	_ = x[T_TRUE-35]
	_ = x[T_VAR-36]
	_ = x[T_WHILE-37]
	_ = x[T_ERROR-38]
	_ = x[T_EOF-39]
}

const _TokenKind_name = "T_LEFT_PARENT_RIGHT_PARENT_LEFT_BRACET_RIGHT_BRACET_COMMAT_DOTT_MINUST_PLUST_SEMICOLONT_SLASHT_START_BANGT_BANG_EQUALT_EQUALT_EQUAL_EQUALT_GREATERT_GREATER_EQUALT_LESST_LESS_EQUALT_IDENTIFIERT_STRINGT_NUMBERT_ANDT_CLASST_ELSET_FALSET_FORT_FUNT_IFT_NILT_ORT_PRINTT_RETURNT_SUPERT_THIST_TRUET_VART_WHILET_ERRORT_EOF"

var _TokenKind_index = [...]uint16{0, 12, 25, 37, 50, 57, 62, 69, 75, 86, 93, 99, 105, 117, 124, 137, 146, 161, 167, 179, 191, 199, 207, 212, 219, 225, 232, 237, 242, 246, 251, 255, 262, 270, 277, 283, 289, 294, 301, 308, 313}

func (i TokenKind) String() string {
	if i < 0 || i >= TokenKind(len(_TokenKind_index)-1) {
		return "TokenKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenKind_name[_TokenKind_index[i]:_TokenKind_index[i+1]]
}
